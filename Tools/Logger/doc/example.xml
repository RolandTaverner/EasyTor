<?xml version="1.0" encoding="utf-8"?>
<config>

	<logger> 
		
		<level> <!-- Уровни журналирования сообщений ( all, debug, info, trace, warning, error, fatal, stat )  -->
		
			<all> <!-- Для всех уровней журналирования сообщений  -->
			
				<file> <!-- Файловый поток вывода сообщений  -->
				
					<!-- Тип заголовка сообщений ( 	"0" или "empty" - заголовок отсутствует
     					 "1" или "short" -заголовок с форматом вывода TIMESTAMP [LEVEL]: message - пример (2014-04-03T12:25:56.797428 [INFO]: message)
     					 "2" или "full" -заголовок с форматом вывода TIMESTAMP hostname pid/tid [LEVEL]: message - пример (2014-04-03T12:25:56.797428 desktop 123/123456 [INFO]: message)
			 			 Если секция не указана, по умолчанию выбирается заголовок - "1" -->
					<header> 1 </header>
				
					<name> /home/akarpov/file/file1 </name>  <!-- Имя файла (обязательный парметр) -->

					<rotate>  <!-- Политика ротирования файлов (не обязательный парметр). Необходимо указывать только один параметр period или size-->
						<period>0:0:10.000</period>  <!-- Период времени через который происходит ротирование файлов (строго в фомате ч:м:сек.xxx) -->
						<size> 10 </size>  <!-- Максимальный размер файла в килобайтах -->
					</rotate>	
					
					<error> stdout </error> <!-- политика обработки ошибок потока: no, exception, stdout, stderr
												 если секция отсутствует по умолчанию ошибки выводятся в stderr-->					 
				</file>
					
				<file>
					<name> /home/akarpov/file/file2 </name>
				</file>
								
				<pipe>  <!-- Поток вывода сообщений в программный канал  -->
				
					<!-- Тип заголовка сообщений ( 	"0" или "empty" - заголовок отсутствует
     					 "1" или "short" -заголовок с форматом вывода TIMESTAMP [LEVEL]: message - пример (2014-04-03T12:25:56.797428 [INFO]: message)
     					 "2" или "full" -заголовок с форматом вывода TIMESTAMP hostname pid/tid [LEVEL]: message - пример (2014-04-03T12:25:56.797428 desktop 123/123456 [INFO]: message)
			 			 Если секция не указана, по умолчанию выбирается заголовок - "1" -->

					<header> 1 </header>
					
					<name> /home/akarpov/file/pipe1 </name>  <!-- Имя канала (обязательный парметр) -->
					<buffer> 20 </buffer> <!-- Размер буффера в килобайтах для буффиризации данных в случае отсутствия читающей стороны
											   если секция отсутствует по умолчанию 10000кб-->	 
					<file>	/home/akarpov/file/pipe1_error </file> <!-- Имя файла, для журналирвания сообщений в случае переполнения буффера
					 													параметр не обязательный  -->
					<error> stdout </error> <!-- политика обработки ошибок потока: no, exception, stderr, stdout
												 если секция отсутствует по умолчанию ошибки выводятся в stderr -->
					 				
				</pipe>
				
				<pipe>
					<name> /home/akarpov/file/pipe2 </name>				
				</pipe>
				
				<stdout> 
					<header> 0 </header>
				</stdout> <!--Если данная секция указана, логирование осуществляется также в стандартный поток вывода-->
				<!-- <stderr> </stderr>  Если данная секция указана, логирование осуществляется также в стандартный поток ошибок-->
				
			</all>
			
			<!-- Конфигурационные параметры для  уровня журналирования FATAL -->
			<fatal> 
				<all_add> 1 </all_add> <!-- 1 - при конфигурации уровня данные берутся из данной секции и секции "all", 
											 0 - уровень конфигурируется, только на основе данной секции 
											 если секция отсутствует, по умолчанию выбирается политика "1"-->
				<file>
					<header> 0 </header>
					<name> /home/akarpov/file/file_error </name>
				</file>
			</fatal>
		
		</level>
		
		<!-- 
				Список активных уровней ( all, debug, info, trace, warning, error, fatal, stat),
				если секция не указана все уровни считаются активными 
		-->
		<active>	
			<level> error </level>
			<level> fatal </level>
		</active>
		
	</logger>

</config>

<!-- 
	Пример простого файла конфигурации. 
	Собщения имеют загоовок гггг-мм-ддTчч:мм:сс.xxxxx [Уровень]
	Для всех уровней - сообщения записываются в файл (ротирование отсутствует, ошибки выводятся на экран), 
						в программный канал (буффер 1000кб, в случае его переполнения данные теряются, ошибки выводятся на экран),
						в стандартный поток вывода
	Для уровня FATAL сообщения дополнительно записываюся в еще один файл (ротирование отсутствует, ошибки выводятся на экран)
-->
<!-- 
<config>

	<logger>  
	
		<level> 
		
			<all> 
				<file> 
					<name> /home/akarpov/file/file1 </name> 							 
				</file>
					
				<pipe>
					<name> /home/akarpov/file/pipe2 </name>				
				</pipe>
				
				<stdout> </stdout>		
			</all>		
							
			<fatal> 
				<file>
					<name> /home/akarpov/file/file_error </name>
				</file>
			</fatal>
	
		</level>
		
	</logger>
	
</config>
-->

